// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Template.Data.Context;

namespace Template.Data.Migrations
{
    [DbContext(typeof(SQLServerContext))]
    [Migration("20210120114001_Template.1.0")]
    partial class Template10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Template.Domain.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedData")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedUser = 0,
                            Icon = "dashboard.png",
                            IsActive = true,
                            Name = "Dashboard",
                            Sequence = 1,
                            URL = "dashboard",
                            UpdatedUser = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedUser = 0,
                            Icon = "users.png",
                            IsActive = true,
                            Name = "Users",
                            Sequence = 2,
                            URL = "users",
                            UpdatedUser = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedUser = 0,
                            Icon = "accounts.png",
                            IsActive = true,
                            Name = "Account",
                            Sequence = 3,
                            URL = "accounts",
                            UpdatedUser = 0
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.ModuleProfile", b =>
                {
                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("ModuleId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ModuleProfiles");

                    b.HasData(
                        new
                        {
                            ModuleId = 1,
                            ProfileId = 1
                        },
                        new
                        {
                            ModuleId = 2,
                            ProfileId = 1
                        },
                        new
                        {
                            ModuleId = 3,
                            ProfileId = 1
                        },
                        new
                        {
                            ModuleId = 1,
                            ProfileId = 2
                        },
                        new
                        {
                            ModuleId = 3,
                            ProfileId = 2
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedData")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedUser = 0,
                            IsActive = true,
                            IsDefault = false,
                            Name = "Admin",
                            UpdatedUser = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedUser = 0,
                            IsActive = true,
                            IsDefault = true,
                            Name = "User",
                            UpdatedUser = 0
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsAuthorised")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedData")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 1, 20, 11, 39, 59, 690, DateTimeKind.Local).AddTicks(746),
                            CreatedUser = 1,
                            Email = "admin@template.com",
                            IsActive = true,
                            IsAuthorised = true,
                            Name = "Admin",
                            Password = "8D66A53A381493BEC08DA23CEF5A43767F20A42C",
                            ProfileId = 1,
                            UpdatedUser = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 1, 20, 11, 39, 59, 695, DateTimeKind.Local).AddTicks(4422),
                            CreatedUser = 1,
                            Email = "user@template.com",
                            IsActive = true,
                            IsAuthorised = true,
                            Name = "User",
                            Password = "8D66A53A381493BEC08DA23CEF5A43767F20A42C",
                            ProfileId = 2,
                            UpdatedUser = 0
                        });
                });

            modelBuilder.Entity("Template.Domain.Entities.ModuleProfile", b =>
                {
                    b.HasOne("Template.Domain.Entities.Module", "Module")
                        .WithMany("Profiles")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Template.Domain.Entities.Profile", "Profile")
                        .WithMany("Modules")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Template.Domain.Entities.User", b =>
                {
                    b.HasOne("Template.Domain.Entities.Profile", "Profile")
                        .WithMany("Users")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Template.Domain.Entities.Module", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("Template.Domain.Entities.Profile", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
